# Example hostapd build time configuration
#
# This file lists the configuration options that are used when building the
# hostapd binary. All lines starting with # are ignored. Configuration option
# lines must be commented out complete, if they are not to be included, i.e.,
# just setting VARIABLE=n is not disabling that variable.
#
# This file is included in Makefile, so variables like CFLAGS and LIBS can also
# be modified from here. In most cass, these lines should use += in order not
# to override previous values of the variables.

# Driver interface for Host AP driver
CONFIG_DRIVER_HOSTAP:=

# Driver interface for wired authenticator
CONFIG_DRIVER_WIRED:=

# Driver interface for madwifi driver
#CONFIG_DRIVER_MADWIFI:=
#CFLAGS += -I../../madwifi # change to the madwifi source directory

# Driver interface for drivers using the nl80211 kernel interface
CONFIG_DRIVER_NL80211:=
# driver_nl80211.c requires a rather new libnl (version 1.1) which may not be
# shipped with your distribution yet. If that is the case, you need to build
# newer libnl version and point the hostapd build to use it.
#LIBNL=/usr/src/libnl
#CFLAGS += -I$(LIBNL)/include
#LIBS += -L$(LIBNL)/lib

# Driver interface for FreeBSD net80211 layer (e.g., Atheros driver)
#CONFIG_DRIVER_BSD:=
#CFLAGS += -I/usr/local/include
#LIBS += -L/usr/local/lib
#LIBS_p += -L/usr/local/lib
#LIBS_c += -L/usr/local/lib

# Driver interface for no driver (e.g., RADIUS server only)
#CONFIG_DRIVER_NONE:=

# IEEE 802.11F/IAPP
CONFIG_IAPP:=

# WPA2/IEEE 802.11i RSN pre-authentication
CONFIG_RSN_PREAUTH:=

# PeerKey handshake for Station to Station Link (IEEE 802.11e DLS)
CONFIG_PEERKEY:=

# IEEE 802.11w (management frame protection)
# This version is an experimental implementation based on IEEE 802.11w/D1.0
# draft and is subject to change since the standard has not yet been finalized.
# Driver support is also needed for IEEE 802.11w.
#CONFIG_IEEE80211W:=

# Integrated EAP server
CONFIG_EAP:=

# EAP-MD5 for the integrated EAP server
CONFIG_EAP_MD5:=

# EAP-TLS for the integrated EAP server
CONFIG_EAP_TLS:=

# EAP-MSCHAPv2 for the integrated EAP server
CONFIG_EAP_MSCHAPV2:=

# EAP-PEAP for the integrated EAP server
CONFIG_EAP_PEAP:=

# EAP-GTC for the integrated EAP server
CONFIG_EAP_GTC:=

# EAP-TTLS for the integrated EAP server
CONFIG_EAP_TTLS:=

# EAP-SIM for the integrated EAP server
#CONFIG_EAP_SIM:=

# EAP-AKA for the integrated EAP server
#CONFIG_EAP_AKA:=

# EAP-AKA' for the integrated EAP server
# This requires CONFIG_EAP_AKA to be enabled, too.
#CONFIG_EAP_AKA_PRIME:=

# EAP-PAX for the integrated EAP server
#CONFIG_EAP_PAX:=

# EAP-PSK for the integrated EAP server (this is _not_ needed for WPA-PSK)
#CONFIG_EAP_PSK:=

# EAP-SAKE for the integrated EAP server
#CONFIG_EAP_SAKE:=

# EAP-GPSK for the integrated EAP server
#CONFIG_EAP_GPSK:=
# Include support for optional SHA256 cipher suite in EAP-GPSK
#CONFIG_EAP_GPSK_SHA256:=

# EAP-FAST for the integrated EAP server
# Note: Default OpenSSL package does not include support for all the
# functionality needed for EAP-FAST. If EAP-FAST is enabled with OpenSSL,
# the OpenSSL library must be patched (openssl-0.9.9-session-ticket.patch)
# to add the needed functions.
#CONFIG_EAP_FAST:=

# Wi-Fi Protected Setup (WPS)
CONFIG_WPS:=
# Enable WSC 2.0 support
CONFIG_WPS2:=
# Enable UPnP support for external WPS Registrars
CONFIG_WPS_UPNP:=

# EAP-IKEv2
#CONFIG_EAP_IKEV2:=

# Trusted Network Connect (EAP-TNC)
#CONFIG_EAP_TNC:=

# PKCS#12 (PFX) support (used to read private key and certificate file from
# a file that usually has extension .p12 or .pfx)
CONFIG_PKCS12:=

# RADIUS authentication server. This provides access to the integrated EAP
# server from external hosts using RADIUS.
#CONFIG_RADIUS_SERVER:=

# Build IPv6 support for RADIUS operations
CONFIG_IPV6:=

# IEEE Std 802.11r-2008 (Fast BSS Transition)
#CONFIG_IEEE80211R:=

# Use the hostapd's IEEE 802.11 authentication (ACL), but without
# the IEEE 802.11 Management capability (e.g., madwifi or FreeBSD/net80211)
#CONFIG_DRIVER_RADIUS_ACL:=

# IEEE 802.11n (High Throughput) support
#CONFIG_IEEE80211N:=

# Remove debugging code that is printing out debug messages to stdout.
# This can be used to reduce the size of the hostapd considerably if debugging
# code is not needed.
#CONFIG_NO_STDOUT_DEBUG:=

# Remove support for RADIUS accounting
#CONFIG_NO_ACCOUNTING:=

# Remove support for RADIUS
#CONFIG_NO_RADIUS:=

# Remove support for VLANs
#CONFIG_NO_VLAN:=

# Remove support for dumping state into a file on SIGUSR1 signal
# This can be used to reduce binary size at the cost of disabling a debugging
# option.
#CONFIG_NO_DUMP_STATE:=

# Enable tracing code for developer debugging
# This tracks use of memory allocations and other registrations and reports
# incorrect use with a backtrace of call (or allocation) location.
#CONFIG_WPA_TRACE:=
# For BSD, comment out these.
#LIBS += -lexecinfo
#LIBS_p += -lexecinfo
#LIBS_c += -lexecinfo

# Use libbfd to get more details for developer debugging
# This enables use of libbfd to get more detailed symbols for the backtraces
# generated by CONFIG_WPA_TRACE:=.
#CONFIG_WPA_TRACE_BFD:=
# For BSD, comment out these.
#LIBS += -lbfd -liberty -lz
#LIBS_p += -lbfd -liberty -lz
#LIBS_c += -lbfd -liberty -lz


# remove all definitions from Android.mk
NEED_RC4:=
NEED_AES:=
NEED_MD5:=
NEED_SHA1:=
CONFIG_NO_ACCOUNTING:=
CONFIG_L2_PACKET:=
NEED_SHA256:=
NEED_AES_OMAC1:=
NEED_SHA256:=
NEED_AES_OMAC1:=
NEED_AES_UNWRAP:=
CHAP:=
TLS_FUNCS:=
TLS_FUNCS:=
CONFIG_EAP_MSCHAPV2:=
TLS_FUNCS:=
CHAP:=
MS_FUNCS:=
CONFIG_EAP_SIM_COMMON:=
NEED_AES_CBC:=
CONFIG_EAP_SIM_COMMON:=
NEED_SHA256:=
NEED_AES_CBC:=
NEED_FIPS186_2_PRF:=
NEED_AES_OMAC1:=
NEED_AES_ENCBLOCK:=
NEED_AES_EAX:=
NEED_SHA256:=
NEED_AES_OMAC1:=
NEED_SHA256:=
TLS_FUNCS:=
NEED_T_PRF:=
NEED_AES_UNWRAP:=
NEED_DH_GROUPS:=
NEED_SHA256:=
NEED_BASE64:=
NEED_AES_CBC:=
NEED_MODEXP:=
CONFIG_EAP:=
NEED_WPS_OOB:=
NEED_WPS_OOB:=
NEED_DH_GROUPS:=
NEED_DH_GROUPS_ALL:=
NEED_MODEXP:=
NEED_CIPHER:=
NEED_BASE64:=
NEED_DES:=
NEED_MD4:=
NEED_DES:=
NEED_TLS_PRF:=
CONFIG_INTERNAL_SHA256:=
CONFIG_INTERNAL_RC4:=
CONFIG_INTERNAL_DH_GROUP5:=
CONFIG_INTERNAL_SHA256:=
CONFIG_INTERNAL_RC4:=
CONFIG_INTERNAL_DH_GROUP5:=
CONFIG_INTERNAL_MD4:=
CONFIG_INTERNAL_DH_GROUP5:=
NEED_SHA256:=
NEED_BASE64:=
NEED_TLS_PRF:=
NEED_MODEXP:=
NEED_CIPHER:=
NEED_DES:=
CONFIG_INTERNAL_SHA256:=
CONFIG_INTERNAL_RC4:=
CONFIG_INTERNAL_DH_GROUP5:=
NEED_AES_DEC:=
CONFIG_INTERNAL_AES:=
CONFIG_INTERNAL_DES:=
CONFIG_INTERNAL_SHA1:=
CONFIG_INTERNAL_MD4:=
CONFIG_INTERNAL_MD5:=
CONFIG_INTERNAL_SHA256:=
CONFIG_INTERNAL_RC4:=
CONFIG_INTERNAL_DH_GROUP5:=
CONFIG_INTERNAL_SHA256:=
CONFIG_INTERNAL_RC4:=
CONFIG_INTERNAL_AES:=
CONFIG_INTERNAL_SHA1:=
CONFIG_INTERNAL_MD5:=
CONFIG_INTERNAL_SHA256:=
CONFIG_INTERNAL_RC4:=
CONFIG_INTERNAL_AES:=
CONFIG_INTERNAL_SHA1:=
CONFIG_INTERNAL_MD5:=
CONFIG_INTERNAL_RC4:=
NEED_AES_CTR:=
NEED_AES_DEC:=
NEED_AES_DEC:=
